{
  "name": "socket.io-stream",
  "version": "0.3.1",
  "description": "stream for socket.io",
  "author": {
    "name": "Naoyuki Kanezawa",
    "email": "naoyuki.kanezawa@gmail.com"
  },
  "keywords": [
    "stream",
    "socket.io",
    "binary",
    "file",
    "upload"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/nkzawa/socket.io-stream.git"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "readable-stream": "1.0.2",
    "debug": "*"
  },
  "devDependencies": {
    "socket.io": "0.9.16",
    "socket.io-client": "0.9.16",
    "mocha": "1.9.0",
    "chai": "*",
    "async": "*",
    "checksum": "*",
    "browserify": "*",
    "uglify-js": "*",
    "phantomjs": "*",
    "mocha-phantomjs": "*",
    "node-static": "*"
  },
  "readme": "# Socket.IO stream\n[![Build Status](https://travis-ci.org/nkzawa/socket.io-stream.png?branch=master)](https://travis-ci.org/nkzawa/socket.io-stream)\n[![NPM version](https://badge.fury.io/js/socket.io-stream.png)](http://badge.fury.io/js/socket.io-stream)\n\nThis is the module for bidirectional binary data transfer with Stream 2 API through [Socket.IO](https://github.com/LearnBoost/socket.io).\n\n## Installation\n    $ npm install socket.io-stream\n\n## Usage\nFor streaming between servers and clients, you must send stream instances first.\nTo receive streams, you just wrap `socket` with `socket.io-stream`, then listen any events as usual.\n\nServer:\n```js\nvar io = require('socket.io').listen(80);\nvar ss = require('socket.io-stream');\nvar path = require('path');\n\nio.of('/user').on('connection', function(socket) {\n  ss(socket).on('profile-image', function(stream, data) {\n    var filename = path.basename(data.name);\n    stream.pipe(fs.createWriteStream(filename));\n  });\n});\n```\n\n`createStream()` will return a new writable stream which can be sent by `emit`.\n\nClient:\n```js\nvar io = require('socket.io-client');\nvar ss = require('socket.io-stream');\n\nvar socket = io.connect('http://example.com/user');\nvar stream = ss.createStream();\nvar filename = 'profile.jpg';\n\nss(socket).emit('profile-image', stream, {name: filename});\nfs.createReadStream(filename).pipe(stream);\n```\n\nYou can stream data from a client to server, and vice versa.\n\n### Browser\nThis module can be used on the browser. To do so, just copy a file to a public directory.\n\n    $ cp node_modules/socket.io-stream/socket.io-stream.js somewhere/public/\n\nYou can also use [browserify](http://github.com/substack/node-browserify) to build manually.\n\n    $ npm install browserify -g\n    $ cd node_modules/socket.io-stream\n    $ browserify index.js -s ss > socket.io-stream.js\n\n```html\n<input id=\"file\" type=\"file\" />\n\n<script src=\"/socket.io/socket.io.js\"></script>\n<script src=\"/js/socket.io-stream.js\"></script>\n<script src=\"/js/jquery.js\"></script>\n<script>\n$(function() {\n  var socket = io.connect('/foo');\n\n  $('#file').change(function(e) {\n    var file = e.target.files[0];\n    var stream = ss.createStream();\n\n    // upload a file to the server.\n    ss(socket).emit('file', stream, {size: file.size});\n    ss.createBlobReadStream(file).pipe(stream);\n  });\n});\n</script>\n```\n\n## Documentation\n\n### ss(sio)\nLook up an existing `Socket` instance based on `sio` (a socket of Socket.IO), or create one if it doesn't exist.\n\n### socket.emit(event, ...)\nEmit an `event` with variable args including at least a stream.\n\n### socket.on(event, listener)\nAdd a `listener` for `event`. `listener` will take streams with any data as arguments.\n\n### ss.createStream([options])\nCreate a new writable stream. See [the docs](http://nodejs.org/api/stream.html) for the details of stream and `options`.\n\n### ss.createBlobReadStream(blob, [options])\nCreate a new readable stream for [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob) and [File](https://developer.mozilla.org/en-US/docs/Web/API/File). See [the docs](http://nodejs.org/api/stream.html) for the details of stream and `options`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nkzawa/socket.io-stream/issues"
  },
  "_id": "socket.io-stream@0.3.1",
  "_from": "socket.io-stream@"
}
